// Cross-browser border radius

@mixin border-radius($a: false, $b: false, $c: false, $d: false, $top-left: 0, $top-right: 0, $bottom-right: 0, $bottom-left: 0, $top: false, $bottom: false, $right: false, $left: false, $radius: false) {

  // Handle shorthand notation like CSS3 would
  // You shouldn't explictly set these variables when calling the mixin
  @if $d { $radius: $a $b $c $d; }
  @else if $c { $radius: $a $b $c; }
  @else if $b { $radius: $a $b; }
  @else if $a { $radius: $a; }

  @else {

    // Target individual corners (or groups) instead of using CSS3 shorthand
    @if $top { $top-left: $top; $top-right: $top; }
    @if $bottom { $bottom-right: $bottom; $bottom-left: $bottom; }
    @if $left { $top-left: $left; $bottom-left: $left; }
    @if $right { $top-right: $right; $bottom-right: $right; }
    @if $top-left { $top-left: $top-left; }
    @if $top-right { $top-right: $top-right; }
    @if $bottom-left { $bottom-left: $bottom-left; }
    @if $bottom-right { $bottom-right: $bottom-right; }

    // Set the radius
    $radius: $top-left $top-right $bottom-right $bottom-left;
  }

  // Webkit, Mozilla, KHTML and standard CSS3
  -webkit-border-radius: $radius;
   -khtml-border-radius: $radius;
     -moz-border-radius: $radius;
  		  border-radius: $radius;
  -webkit-background-clip: padding-box;
   -khtml-background-clio: padding-box;
   		 -moz-background-clip: padding;
  		  background-clip: padding-box;
}